swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Assignment 4"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/v1"
tags:
- name: "user"
  description: "about user"
  externalDocs:
    description: "Find out more"
    url: "http://swagger.io"
schemes:
- "http"
paths:
  /auth:
    post:
      tags:
      - "user"
      summary: "Authenticate user and token"
      description: ""
      operationId: "userlogin"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
  /weather:      
    get:
      tags:
      - "user"
      summary: "Return Current temperature"
      description: ""
      operationId: "getWeather"
      produces:
      - "application/json"
      parameters:
      - name: "q"
        in: "query" 
        description: "name of city"
        required: true
        type: "string"
      - name: "appid"  
        in: "query"
        description: "Your api key"
        required: true
        type: "string"
      responses:
        "200":
          description: "succeessful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "Allowed by user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in when token expires"
        "400":
          description: "Invalid q/appid"
  /hello:
    get:
      tags:
      - "user"
      summary: "return a random greeting"
      description: ""
      operationId: "getgreeting"
      produces:
      - "application/json"
      parameters: []
      responses:
        default:
          description: "successful operation"
definitions:
  User:
    type: "object"
    properties:
      username:
        type: "string"
      password:
        type: "string"
        description: "User Status"
        // url changed
